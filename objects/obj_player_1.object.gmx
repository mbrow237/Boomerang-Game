<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isMoving = false;
canMove = true;
useWeapon = true;
attacking = false;
player_direction = "down";
boom_x = 0;
boom_y = 0;
dying = false;
death = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dying = true;
sprite_index = spr_player_death_1;
image_speed = .27;
audio_play_sound(snd_player_death, 10, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;
attacking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>boom_x = self.x - self.xprevious;
boom_y = self.y - self.yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inputs
if (dying == false)
{
if((keyboard_check(vk_left)) &amp;&amp; canMove == true){
    //sprite_index = spr_Hero_Left;
    player_direction = "left";
    isMoving = true;
    
    if !(place_meeting(x-2, y, obj_wall))
        {
            x -= 2;
        }
}

if((keyboard_check(vk_right))  &amp;&amp; canMove == true){
    //sprite_index = spr_Hero_Right;
    player_direction = "right";
    isMoving = true;
    if !(place_meeting(x+2, y, obj_wall))
        {
            x += 2;
        }
}

if((keyboard_check(vk_up)) &amp;&amp; canMove == true){
    //sprite_index = spr_Hero_Up;
    player_direction = "up";
    isMoving = true;
if !(place_meeting(x, y-2, obj_wall))
        {
            y -= 2;
        }
}

if((keyboard_check(vk_down)) &amp;&amp; canMove == true){
    //sprite_index = spr_Hero_Down;
    player_direction = "down";
    isMoving = true;
if !(place_meeting(x, y+2, obj_wall))
        {
            y += 2;
        }
}

if (!(keyboard_check(vk_up))&amp;&amp;!(keyboard_check(vk_right))&amp;&amp;!(keyboard_check(vk_left))&amp;&amp;!(keyboard_check(vk_down)))
{
    isMoving = false;
}

if (keyboard_check(vk_space) &amp;&amp; attacking == false &amp;&amp; useWeapon == true &amp;&amp; canMove == true)
{
    canMove = false;
    useWeapon = false;
    attacking = true;
    var boom;
    boom = instance_create(self.x,self.y,obj_boomerang);
    boom.throw_x = boom_x;
    boom.throw_y = boom_y;
    boom.throwDirection = player_direction;
    alarm[0] = 10;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing Sprite
if (dying == false)
{
if (player_direction == "down" &amp;&amp; isMoving == true &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_walking_down;
        image_speed = 0.5;
    }
    
if (player_direction == "up" &amp;&amp; isMoving == true &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_walking_up;
           image_speed = 0.5;
    }
    
if (player_direction == "left" &amp;&amp; isMoving == true &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_walking_left;
           image_speed = 0.5;
    }
if (player_direction == "right" &amp;&amp; isMoving == true &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_walking_right;
           image_speed = 0.5;
    }
//Idle Animation    
if (player_direction == "right" &amp;&amp; isMoving == false &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_idle_right;
           image_speed = 0.5;
    } 
    
if (player_direction == "left" &amp;&amp; isMoving == false &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_idle_left;
           image_speed = 0.5;
    }
if (player_direction == "up" &amp;&amp; isMoving == false &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_idle_up;
           image_speed = 0.5;
    }                   
 
if (player_direction == "down" &amp;&amp; isMoving == false &amp;&amp; canMove == true)
    {
        sprite_index = spr_player_idle_down;
           image_speed = 0.5;
    }       
 //Attacking Animation
    if (player_direction == "down" &amp;&amp; attacking == true &amp;&amp; canMove == false)
    {
        sprite_index = spr_player_throwing_down;
        image_speed = 0.5;
    }
    
    if (player_direction == "up" &amp;&amp; attacking == true &amp;&amp; canMove == false)
    {
        sprite_index = spr_player_throwing_up;
        image_speed = 0.5;
    }
    
    if (player_direction == "right" &amp;&amp; attacking == true &amp;&amp; canMove == false)
    {
        sprite_index = spr_player_throwing_right;
        image_speed = 0.5;
    }
    
        if (player_direction == "left" &amp;&amp; attacking == true &amp;&amp; canMove == false)
    {
        sprite_index = spr_player_throwing_left;
        image_speed = 0.5;
    }           
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_slime">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dying == false)
{
death = true;
dying = true;
sprite_index = spr_player_death_2;
alarm[1] = 30;
audio_play_sound(snd_enemy_touched, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boomerang_return">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy boomerang
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Catching Sprite
attacking = true;  
canMove = false;    
    
    if (player_direction == "down")
    {
        sprite_index = spr_player_throwing_down;
        image_speed = 0.5;
        alarm[0] = 5;
    }
    
    if (player_direction == "up")
    {
        sprite_index = spr_player_throwing_up;
        image_speed = 0.5;
        alarm[0] = 5;
    }
    
    if (player_direction == "right")
    {
        sprite_index = spr_player_throwing_right;
        image_speed = 0.5;
        alarm[0] = 5;
    }
    
        if (player_direction == "left")
    {
        sprite_index = spr_player_throwing_left;
        image_speed = 0.5;
        alarm[0] = 5;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index = spr_player_death_1 &amp;&amp; dying == true)
    {
        sprite_index = spr_player_death_3;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>514</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_text</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>'Boom_x = ' + string(hspeed)</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>514</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_text</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>'Boom_y = ' + string(vspeed)</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>16</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>514</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_text</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>'Can Use Boomerang: ' + string(useWeapon)</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>256</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>99.9000015258789</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>99</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
